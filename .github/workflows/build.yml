name: build and deploy artifact to ECS.

on:
  push:
      branches:
          - main
  workflow_dispatch:

jobs:
    scan-build-containerize:
        permissions:
            contents: read
            packages: write
        runs-on: ubuntu-latest
        steps: 
            - name: clone repository
              uses: actions/checkout@v3  ### the first step clones our repo into the runner. 

            - name: install and setup java with maven 
              uses: actions/setup-java@v3
              with:
                distribution: 'adopt'
                java-version: '11' 
            
            - name: perform code analysis
              run: mvn sonar:sonar -Dsonar.host.url=http://3.86.205.133:9000

            - name: code build with maven 
              run:  mvn package   
            - name: upload artifact to artifact repository
              run: mvn --batch-mode deploy
              env: 
                GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

            - name: authenticate into aws
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
                aws-region: ${{ secrets.AWS_REGION }}
            
            - name: Login to Amazon ECR Public
              id: login-ecr-public
              uses: aws-actions/amazon-ecr-login@v2
              with:
                registry-type: public
        
            - name: Build, tag, and push docker image to Amazon ECR Public
              id: build_image
              env:
                REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
                REGISTRY_ALIAS: p6d3t8u8
                REPOSITORY: ecstest
                IMAGE_TAG: ${{ github.sha }}
              run: |
                docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
                docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
                echo "image = $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
            
            - name: Fill in the new image ID in the Amazon ECS task definition
              id: task-def
              env:
                REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
                REGISTRY_ALIAS: p6d3t8u8
                REPOSITORY: ecstest
                IMAGE_TAG: ${{ github.sha }}
              uses: aws-actions/amazon-ecs-render-task-definition@v1 
              with:
                task-definition: task_definition.json
                image: ${{env.REGISTRY}}/${{env.REGISTRY_ALIAS}}/${{env.REPOSITORY}}:${{env.IMAGE_TAG}}
                container-name: ecs-test
                
            - name: Deploy Amazon ECS task definition
              uses: aws-actions/amazon-ecs-deploy-task-definition@v1
              with:
                task-definition: ${{ steps.task-def.outputs.task-definition }}
                service: manuel
                cluster: ecstest-cluster
                wait-for-service-stability: true 
